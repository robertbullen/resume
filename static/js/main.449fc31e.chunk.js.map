{"version":3,"sources":["resume/resume-model.ts","resume/fake-resume-provider.ts","resume/robert.ts","resume/resume-provider-factory.ts","resume/instance-resume-provider.ts","resume/json-resume-provider.ts","components/CandidateContactService.tsx","components/CandidateContactServiceList.tsx","drawing/measure-text.ts","hooks/use-measure-text-params.ts","hooks/use-computed-style.ts","hooks/use-autoscaling-font-size.ts","hooks/use-font.ts","components/CandidateName.tsx","components/ExperienceTimeline.tsx","drawing/point.ts","drawing/hexagon.ts","drawing/hex-grid.ts","drawing/rectangle.ts","components/InterestsHexGrid.tsx","drawing/inscriptions.ts","components/Mission.tsx","components/Section.tsx","components/SkillRatingsChart.tsx","components/SkillRatingsChartList.tsx","components/Resume.tsx","components/App.tsx","hooks/use-resume-model.ts","serviceWorker.ts","index.tsx"],"names":["getRating","skillRating","rating","getSkill","skill","skillRatingLevels","generateSkills","generateKey","generateValue","min","max","result","index","faker","number","generateObject","adjective","noun","generateItem","push","generateArray","abbreviation","provideFakeResume","firstName","lastName","email","phone","phoneNumber","website","url","resume","candidate","contactServices","handle","name","findName","experiences","interests","mission","paragraph","skills","Promise","resolve","robert","finishDate","Date","highlights","organization","role","startDate","Analytical","column","row","Creative","createResumeProvider","params","provideResume","get","undefined","Error","a","fetch","headers","accept","response","ok","json","obj","experience","provideJsonResume","CandidateContactService","props","actualProps","className","href","contactService","style","whiteSpace","title","iconCssClasses","default","CandidateContactServiceList","map","key","defaultProps","Email","GitHub","LinkedIn","Phone","Twitter","Website","measureTextParamsFromStyle","compensationFactor","Number","parseFloat","getPropertyValue","font","letterSpacing","textTransform","wordSpacing","measureText","text","context","_context","document","createElement","getContext","metrics","width","Math","actualBoundingBoxRight","actualBoundingBoxLeft","refinements","total","transformedText","toUpperCase","slice","toLowerCase","transformedMetrics","transformedWidth","letterCount","length","wordCount","trim","split","prefudgedWidth","actualWidth","useMeasureTextParams","frequency","useComputedStyleResult","useState","element","setElement","setStyle","ref","useCallback","window","getComputedStyle","useComputedStyle","measureTextParams","useMemo","useAutoscalingFontSize","parent","useResizeObserver","child","childHeights","console","log","fontSize","maxHeight","lineHeight","isFontReady","fontReady","setFontReady","useEffect","newFontReady","fonts","check","ready","then","useFont","childInnerText","innerText","measureTextResult","current","fontSizeHorzFit","fontSizeVertMax","isNaN","MAX_VALUE","setProperty","childRef","parentRef","CandidateName","ExperienceTimeline","height","startOfYear","date","getFullYear","getTime","startOfNextYear","years","d3","year","container","scale","domain","range","yearBoxHeight","select","selectAll","data","reverse","join","attr","_year","yearIndex","yearText","toString","Point","init","x","y","this","p1","p2","sqrt","distanceFromP1","distance","xProportion","yProportion","Hexagon","cx","cy","r","radiusOffset","cornerRadius","vertices","vertex","curves","currVertex","prevVertex","nextVertex","control","finish","onLine","start","path","curve","topCenterRadians","PI","vertexRadians","cos","sin","HexGrid","hexagonRadius","columns","rows","b","dx","abs","dy","coordinate","Rectangle","InterestsHexGrid","divRef","div","labelsGroup","hexGridDimensions","allInterests","Object","values","flat","interest","grid","fitToWidth","textSquareSide","maxWordWidth","flatMap","word","labelFontSize","calcAnimationOffsetStyle","dimensions","hexagon","topLeft","bottomRight","entries","cluster","isClusterName","classNames","d","toSvgPath","textRectangle","display","textAlign","verticalAlign","xmlns","Mission","Section","children","heading","sectionProps","durations","short","xLabelsRotateRadians","SkillRatingsChart","skillCategory","skillRatings","allSkills","innerSkillRatings","skillLevels","allLevels","initialSortBy","sortBy","setSortBy","initialSortDesc","sortDesc","setSortDesc","sortComparer","left","right","localeCompare","sortedSkillRatings","sort","useInView","threshold","triggerOnce","svgRef","inView","useLabelsGroup","useMeasureTextParamsResult","xLabelsGroup","yLabelsGroup","regions","skillWidthMax","yLabelsWidth","ceil","unrotatedWidthMax","adjacent","opposite","xLabelsHeight","plotRegionMargin","chart","plot","yLabels","xLabels","bottom","xAxis","getX","xGridPolyline","fill","points","skillLevel","tan","x0","xLabel","textAnchor","transform","yLabel","fadeInDelay","_skillRating","skillIndex","fadeInDuration","medium","fadeInOpacityFrom","fadeInOpacityTo","fadeInTransition","sortDuration","sortTransition","enter","append","call","transition","delay","duration","update","bar","growInDelay","growInDuration","long","growInTransition","widthFrom","uniqueId","xGridLinearGradientId","xGridMaskId","barsLinearGradientId","barsMaskId","id","x1","x2","y1","y2","offset","stopColor","stopOpacity","mask","onClick","cursor","SkillRatingsChartList","keys","filter","Resume","App","provider","setResume","useResumeModel","URL","location","searchParams","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.449fc31e.chunk.js","sourcesContent":["export interface ContactService {\n\thandle: string;\n\tname: string;\n\turl: string;\n}\n\nexport interface Candidate {\n\tcontactServices: ContactService[];\n\tname: string;\n}\n\nexport interface Interest {\n\tcolumn: number;\n\trow: number;\n\tname: string;\n}\n\nexport type InterestsRecord = Record<string, Interest[]>;\n\nexport interface SkillRating {\n\trating: number;\n\tskill: string;\n}\n\nexport function getRating(skillRating: SkillRating): number {\n\treturn skillRating.rating;\n}\n\nexport function getSkill(skillRating: SkillRating): string {\n\treturn skillRating.skill;\n}\n\nexport const skillRatingMax = 5;\n\nexport function skillRatingLevels(): SkillRating[] {\n\treturn [\n\t\t{ rating: 0.5, skill: 'Functional' },\n\t\t{ rating: 2.5, skill: 'Proficient' },\n\t\t{ rating: 4.5, skill: 'Exceptional' },\n\t\t// { rating: 0, skill: '0' },\n\t\t// { rating: 1, skill: '1' },\n\t\t// { rating: 2, skill: '2' },\n\t\t// { rating: 3, skill: '3' },\n\t\t// { rating: 4, skill: '4' },\n\t\t// { rating: 5, skill: '5' },\n\t];\n}\n\nexport type SkillCategoriesRecord = Record<string, SkillRating[]>;\n\nexport interface Experience {\n\tfinishDate?: Date;\n\thighlights: string[];\n\torganization: string;\n\trole: string;\n\tstartDate: Date;\n}\n\nexport interface ResumeModel {\n\tcandidate: Candidate;\n\texperiences: Experience[];\n\tinterests: InterestsRecord;\n\tmission: string;\n\tskills: SkillCategoriesRecord;\n}\n\nexport interface ResumeProps {\n\tresume: ResumeModel;\n}\n","import * as faker from 'faker';\nimport { ResumeModel, SkillCategoriesRecord, SkillRating, skillRatingMax } from './resume-model';\n\nfunction generateArray<T>(generateItem: () => T, min: number = 2, max: number = 8): () => T[] {\n\treturn (): T[] => {\n\t\tconst result: T[] = [];\n\t\tfor (let index = 0; index < faker.random.number({ max, min }); index++) {\n\t\t\tresult.push(generateItem());\n\t\t}\n\t\treturn result;\n\t};\n}\n\nfunction generateObject<T>(\n\tgenerateKey: () => string,\n\tgenerateValue: () => T,\n\tmin: number = 2,\n\tmax: number = 8,\n): () => Record<string, T> {\n\treturn (): Record<string, T> => {\n\t\tconst result: Record<string, T> = {};\n\t\tfor (let index = 0; index < faker.random.number({ max, min }); index++) {\n\t\t\tresult[generateKey()] = generateValue();\n\t\t}\n\t\treturn result;\n\t};\n}\n\nfunction generateSkills(): SkillCategoriesRecord {\n\tfunction generateSkillCategory(): string {\n\t\treturn `${faker.hacker.adjective()} ${faker.hacker.noun()}`;\n\t}\n\n\tfunction generateSkillRating(): SkillRating {\n\t\treturn {\n\t\t\trating: faker.random.number({ max: skillRatingMax, min: 1 }),\n\t\t\tskill: faker.hacker.abbreviation(),\n\t\t};\n\t}\n\n\treturn generateObject(generateSkillCategory, generateArray(generateSkillRating), 3)();\n}\n\nexport function provideFakeResume(): Promise<ResumeModel> {\n\tconst firstName: string = faker.name.firstName();\n\tconst lastName: string = faker.name.lastName();\n\tconst email: string = faker.internet.email(firstName, lastName);\n\tconst phone: string = faker.phone.phoneNumber();\n\tconst website: string = faker.internet.url();\n\n\tconst resume: ResumeModel = {\n\t\tcandidate: {\n\t\t\tcontactServices: [\n\t\t\t\t{\n\t\t\t\t\thandle: phone,\n\t\t\t\t\tname: 'Phone',\n\t\t\t\t\turl: `tel:${phone}`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thandle: email,\n\t\t\t\t\tname: 'Email',\n\t\t\t\t\turl: `mailto:${email}`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thandle: website,\n\t\t\t\t\tname: 'Website',\n\t\t\t\t\turl: website,\n\t\t\t\t},\n\t\t\t],\n\t\t\tname: faker.name.findName(firstName, lastName),\n\t\t},\n\t\texperiences: [],\n\t\tinterests: {},\n\t\tmission: faker.lorem.paragraph(3),\n\t\tskills: generateSkills(),\n\t};\n\n\treturn Promise.resolve(resume);\n}\n","import { ResumeModel } from './resume-model';\n\nexport const robert: ResumeModel = {\n\tcandidate: {\n\t\tcontactServices: [\n\t\t\t{\n\t\t\t\thandle: '952-994-6216',\n\t\t\t\tname: 'Phone',\n\t\t\t\turl: 'tel:+19529946216',\n\t\t\t},\n\t\t\t{\n\t\t\t\thandle: 'robert@robertbullen.com',\n\t\t\t\tname: 'Email',\n\t\t\t\turl: 'mailto:robert@robertbullen.com',\n\t\t\t},\n\t\t\t{\n\t\t\t\thandle: 'https://robertbullen.com',\n\t\t\t\tname: 'Website',\n\t\t\t\turl: 'https://robertbullen.com',\n\t\t\t},\n\t\t\t{\n\t\t\t\thandle: '@robertbullen',\n\t\t\t\tname: 'GitHub',\n\t\t\t\turl: 'https://github.com/robertbullen',\n\t\t\t},\n\t\t\t{\n\t\t\t\thandle: 'Robert Bullen',\n\t\t\t\tname: 'LinkedIn',\n\t\t\t\turl: 'https://www.linkedin.com/in/robertbullen/',\n\t\t\t},\n\t\t\t{\n\t\t\t\thandle: '@BullenRobert',\n\t\t\t\tname: 'Twitter',\n\t\t\t\turl: 'https://twitter.com/BullenRobert',\n\t\t\t},\n\t\t],\n\t\tname: 'Robert Bullen',\n\t},\n\texperiences: [\n\t\t{\n\t\t\tfinishDate: new Date('1999-12-01'),\n\t\t\thighlights: [],\n\t\t\torganization: 'University of Minnesota, I.T.',\n\t\t\trole: 'B.S. in Computer Science',\n\t\t\tstartDate: new Date('1994-09-01'),\n\t\t},\n\t\t{\n\t\t\thighlights: [\n\t\t\t\t'Architected and led the development of insurecareteams.com, an AWS serverless web application using TypeScript, React, and Express',\n\t\t\t\t'Established a CI/CD process that integrated GitHub & CodeBuild to perform cross-account AWS deployments using either Pulumi or the AWS CDK',\n\t\t\t\t'Fostered team knowledge transfer with regular lunch & learns',\n\t\t\t],\n\t\t\torganization: 'Constellation',\n\t\t\trole: 'Principal Product Engineer',\n\t\t\tstartDate: new Date('2018-02-26'),\n\t\t},\n\t],\n\tinterests: {\n\t\tAnalytical: [\n\t\t\t{\n\t\t\t\tcolumn: 0,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'Automation',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 1,\n\t\t\t\trow: 1,\n\t\t\t\tname: 'Packet Analysis',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 1,\n\t\t\t\trow: 3,\n\t\t\t\tname: 'Unit Testing',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 2,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'Analytical',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 2,\n\t\t\t\trow: 4,\n\t\t\t\tname: 'Web Services',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 3,\n\t\t\t\trow: 1,\n\t\t\t\tname: 'Data Visualization',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 3,\n\t\t\t\trow: 3,\n\t\t\t\tname: 'Coding Languages',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 4,\n\t\t\t\trow: 0,\n\t\t\t\tname: 'Charting',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 4,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'Software Engineering',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 5,\n\t\t\t\trow: 1,\n\t\t\t\tname: 'User Interface Design',\n\t\t\t},\n\t\t],\n\t\tCreative: [\n\t\t\t{\n\t\t\t\tcolumn: 4,\n\t\t\t\trow: 4,\n\t\t\t\tname: 'Architecture',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 5,\n\t\t\t\trow: 3,\n\t\t\t\tname: 'Design Patterns',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 6,\n\t\t\t\trow: 0,\n\t\t\t\tname: 'Typography',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 6,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'User Experience',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 7,\n\t\t\t\trow: 1,\n\t\t\t\tname: 'Graphic Design',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 7,\n\t\t\t\trow: 3,\n\t\t\t\tname: '???',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 8,\n\t\t\t\trow: 0,\n\t\t\t\tname: 'Illustration',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 8,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'Creative',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 9,\n\t\t\t\trow: 1,\n\t\t\t\tname: 'Photography',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 9,\n\t\t\t\trow: 3,\n\t\t\t\tname: 'Music',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolumn: 10,\n\t\t\t\trow: 2,\n\t\t\t\tname: 'Videography',\n\t\t\t},\n\t\t],\n\t},\n\tmission:\n\t\t'Robert leverages his analytical and creative talents to the fullest when designing and writing modern full stack applications. He is experienced with and enthusiastic about discovering and adopting promising software development technologies and practices.',\n\tskills: {\n\t\t'Soft Skills': [\n\t\t\t{ rating: 4.0, skill: 'End User Focus' },\n\t\t\t{ rating: 4.0, skill: 'Communication' },\n\t\t\t{ rating: 4.0, skill: 'Cont. Learning' },\n\t\t\t{ rating: 4.0, skill: 'Mentorship' },\n\t\t\t{ rating: 4.0, skill: 'Presenting' },\n\t\t\t{ rating: 4.0, skill: 'Self-Motivating' },\n\t\t],\n\t\t'Architecture & Design': [\n\t\t\t{ rating: 3.5, skill: 'AWS' },\n\t\t\t{ rating: 3.5, skill: 'CI/CD' },\n\t\t\t{ rating: 4.5, skill: 'Design Patterns' },\n\t\t\t{ rating: 4.0, skill: 'OOP' },\n\t\t\t{ rating: 3.5, skill: 'REST APIs' },\n\t\t],\n\t\t'Coding Languages': [\n\t\t\t{ rating: 4.0, skill: 'HTML+CSS' },\n\t\t\t{ rating: 4.5, skill: 'JavaScript' },\n\t\t\t{ rating: 2.5, skill: 'Python' },\n\t\t\t{ rating: 3.0, skill: 'SQL' },\n\t\t\t{ rating: 5.0, skill: 'TypeScript' },\n\t\t],\n\t\t'JavaScript Frameworks': [\n\t\t\t{ rating: 1.5, skill: 'Angular' },\n\t\t\t{ rating: 2.0, skill: 'D3' },\n\t\t\t{ rating: 4.0, skill: 'Express' },\n\t\t\t{ rating: 4.0, skill: 'Node.js' },\n\t\t\t{ rating: 3.0, skill: 'React' },\n\t\t\t{ rating: 4.0, skill: 'Jest' },\n\t\t\t{ rating: 3.0, skill: 'Vue' },\n\t\t],\n\t\t'Packet Analysis': [\n\t\t\t{ rating: 5.0, skill: 'TCP/IP' },\n\t\t\t{ rating: 5.0, skill: 'HTTP' },\n\t\t\t{ rating: 4.0, skill: 'SSL/TLS' },\n\t\t\t{ rating: 4.0, skill: 'Wireshark' },\n\t\t],\n\t},\n};\n","import { provideFakeResume } from './fake-resume-provider';\nimport { provideInstanceResume } from './instance-resume-provider';\nimport { provideJsonResume } from './json-resume-provider';\nimport { ResumeProvider } from './resume-provider';\nimport { robert } from './robert';\n\nexport function createResumeProvider(params: URLSearchParams): ResumeProvider {\n\tconst providerName: string | undefined = params.get('provider') ?? undefined;\n\tlet provideResume: ResumeProvider;\n\tswitch (providerName) {\n\t\tcase 'fake':\n\t\t\tprovideResume = provideFakeResume;\n\t\t\tbreak;\n\n\t\tcase 'json':\n\t\t\tconst url: string | undefined = params.get('url') ?? undefined;\n\t\t\tif (!url) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"The JSON resume provider requires query parameter 'url' but it was not defined\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tprovideResume = provideJsonResume(url);\n\t\t\tbreak;\n\n\t\tcase 'robert':\n\t\tdefault:\n\t\t\tprovideResume = provideInstanceResume(robert);\n\t\t\tbreak;\n\t}\n\treturn provideResume;\n}\n","import { ResumeModel } from './resume-model';\nimport { ResumeProvider } from './resume-provider';\n\nexport function provideInstanceResume(resume: ResumeModel): ResumeProvider {\n\treturn () => Promise.resolve(resume);\n}\n","import { ResumeModel } from './resume-model';\nimport { ResumeProvider } from './resume-provider';\n\nexport function provideJsonResume(url: string): ResumeProvider {\n\treturn async (): Promise<ResumeModel> => {\n\t\tconst response: Response = await fetch(url, {\n\t\t\theaders: {\n\t\t\t\taccept: 'application/json',\n\t\t\t},\n\t\t});\n\n\t\tif (response.ok) {\n\t\t\tconst obj: unknown = await response.json();\n\n\t\t\t// TODO: Validate the JSON object conforms to `ResumeModel`.\n\t\t\tconst resume = obj as ResumeModel;\n\t\t\tfor (const experience of resume.experiences) {\n\t\t\t\texperience.finishDate = experience.finishDate && new Date(experience.finishDate);\n\t\t\t\texperience.startDate = experience.startDate && new Date(experience.startDate);\n\t\t\t}\n\n\t\t\treturn resume;\n\t\t}\n\n\t\tthrow new Error(`Failed to fetch resume from ${url}`);\n\t};\n}\n","import React, { FC } from 'react';\nimport { ContactService } from '../resume/resume-model';\n\nexport type IconCssClasses = Record<string, string> & { default: string };\n\nexport function fontAwesomeIconCssClasses(): IconCssClasses {\n\treturn {\n\t\tdefault: 'far fa-address-card',\n\t\tEmail: 'fas fa-envelope',\n\t\tGitHub: 'fab fa-github-alt',\n\t\tLinkedIn: 'fab fa-linkedin-in',\n\t\tPhone: 'fas fa-phone-square',\n\t\tTwitter: 'fab fa-twitter',\n\t\tWebsite: 'fas fa-globe',\n\t};\n}\n\nexport function fontAwesomeSquareIconCssClasses(): IconCssClasses {\n\treturn {\n\t\tdefault: 'fas fa-address-card',\n\t\tEmail: 'fas fa-envelope-square',\n\t\tGitHub: 'fab fa-github-square',\n\t\tLinkedIn: 'fab fa-linkedin',\n\t\tPhone: 'fas fa-phone-square',\n\t\tTwitter: 'fab fa-twitter-square',\n\t\tWebsite: 'fab fa-dribbble-square',\n\t};\n}\n\ninterface Props {\n\tcontactService: ContactService;\n\ticonCssClasses?: IconCssClasses;\n}\n\nexport function CandidateContactService(props: Props) {\n\tconst actualProps = props as Required<Props>;\n\treturn (\n\t\t<div className=\"candidate-contact-service-component truncate\">\n\t\t\t<a\n\t\t\t\thref={actualProps.contactService.url}\n\t\t\t\tstyle={{ whiteSpace: 'nowrap' }}\n\t\t\t\ttitle={actualProps.contactService.name}\n\t\t\t>\n\t\t\t\t<i\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tactualProps.iconCssClasses[actualProps.contactService.name] ??\n\t\t\t\t\t\tactualProps.iconCssClasses.default\n\t\t\t\t\t}\n\t\t\t\t></i>\n\t\t\t\t<span>{actualProps.contactService.handle}</span>\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n(CandidateContactService as FC<Props>).defaultProps = {\n\ticonCssClasses: fontAwesomeSquareIconCssClasses(),\n};\n","import React from 'react';\nimport { ContactService, ResumeProps } from '../resume/resume-model';\nimport { CandidateContactService } from './CandidateContactService';\n\nexport function CandidateContactServiceList(props: ResumeProps) {\n\treturn (\n\t\t<ul className=\"gap-x-2 grid grid-cols-2 sm:grid-cols-3\">\n\t\t\t{props.resume.candidate.contactServices.map((contactService: ContactService) => (\n\t\t\t\t<li key={contactService.url}>\n\t\t\t\t\t<CandidateContactService contactService={contactService} />\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n","import { Property } from 'csstype';\n\nexport interface MeasureTextParams {\n\tcompensationFactor?: number;\n\tfont?: string;\n\tletterSpacing?: number;\n\ttextTransform?: Property.TextTransform;\n\twordSpacing?: number;\n}\n\nexport function measureTextParamsFromStyle(style: CSSStyleDeclaration): MeasureTextParams {\n\treturn {\n\t\tcompensationFactor:\n\t\t\tNumber.parseFloat(style.getPropertyValue('--measure-text-compensation-factor')) ||\n\t\t\tundefined,\n\t\tfont: style.font,\n\t\tletterSpacing: Number.parseFloat(style.letterSpacing) || undefined,\n\t\ttextTransform: style.textTransform as Property.TextTransform,\n\t\twordSpacing: Number.parseFloat(style.wordSpacing) || undefined,\n\t};\n}\n\nexport interface MeasureTextRefinements {\n\t/** The pixel-width adjustment caused by `MeasureTextParams.compensationFactor`.  */\n\tcompensationFactor: number;\n\n\t/** The pixel-width adjustment caused by `MeasureTextParams.letterSpacing'. */\n\tletterSpacing: number;\n\n\t/** The pixel-width adjustment caused by `MeasureTextParams.textTransform'. */\n\ttextTransform: number;\n\n\t/** The sum of all pixel-width adjustments in this type. */\n\ttotal: number;\n\n\t/** The pixel-width adjustment caused by `MeasureTextParams.wordSpacing'. */\n\twordSpacing: number;\n}\n\nexport interface MeasureTextResult {\n\tactualWidth: number;\n\tmetrics: TextMetrics;\n\trefinements: MeasureTextRefinements;\n}\n\nexport function measureText(\n\ttext: string,\n\tparams?: MeasureTextParams,\n\tcontext?: CanvasRenderingContext2D,\n): MeasureTextResult {\n\t// Process arguments.\n\tif (!context) {\n\t\tmeasureText._context =\n\t\t\tmeasureText._context ?? document.createElement('canvas').getContext('2d') ?? undefined;\n\t\tcontext = measureText._context;\n\t}\n\tif (context === undefined) {\n\t\tthrow new Error(\n\t\t\t'A canvas rendering context was not provided as an argument and a default instance could not be created',\n\t\t);\n\t}\n\n\t// Measure the text as-is.\n\tif (params?.font) {\n\t\tcontext.font = params.font;\n\t}\n\tconst metrics: TextMetrics = context.measureText(text);\n\tconst width: number = Math.max(\n\t\tmetrics.width,\n\t\tmetrics.actualBoundingBoxRight - metrics.actualBoundingBoxLeft,\n\t);\n\n\t// Declare an object to hold all refinements.\n\tconst refinements: MeasureTextRefinements = {\n\t\tcompensationFactor: 0,\n\t\tletterSpacing: 0,\n\t\ttextTransform: 0,\n\t\ttotal: 0,\n\t\twordSpacing: 0,\n\t};\n\n\t// Calculate text transform refinements.\n\tlet transformedText: string = text;\n\tif (params?.textTransform) {\n\t\tswitch (params.textTransform) {\n\t\t\tcase 'capitalize':\n\t\t\t\ttransformedText =\n\t\t\t\t\ttransformedText[0].toUpperCase() + transformedText.slice(1).toLowerCase();\n\t\t\t\tbreak;\n\n\t\t\tcase 'lowercase':\n\t\t\t\ttransformedText = transformedText.toLowerCase();\n\t\t\t\tbreak;\n\n\t\t\tcase 'uppercase':\n\t\t\t\ttransformedText = transformedText.toUpperCase();\n\t\t\t\tbreak;\n\t\t}\n\t\tif (transformedText !== text) {\n\t\t\tconst transformedMetrics: TextMetrics = context.measureText(transformedText);\n\t\t\tconst transformedWidth: number = Math.max(\n\t\t\t\ttransformedMetrics.width,\n\t\t\t\ttransformedMetrics.actualBoundingBoxRight -\n\t\t\t\t\ttransformedMetrics.actualBoundingBoxLeft,\n\t\t\t);\n\n\t\t\trefinements.textTransform = transformedWidth - width;\n\t\t\trefinements.total += refinements.textTransform;\n\t\t}\n\t}\n\n\tif (params?.letterSpacing) {\n\t\tconst letterCount: number = transformedText.length;\n\t\trefinements.letterSpacing = (letterCount - 1) * params.letterSpacing;\n\t\trefinements.total += refinements.letterSpacing;\n\t}\n\n\tif (params?.wordSpacing) {\n\t\tconst wordCount: number = transformedText.trim().split(/\\s+/).length;\n\t\trefinements.wordSpacing = (wordCount - 1) * params.wordSpacing;\n\t\trefinements.total += refinements.wordSpacing;\n\t}\n\n\tif (params?.compensationFactor) {\n\t\tconst prefudgedWidth: number = width + refinements.total;\n\t\trefinements.compensationFactor =\n\t\t\tprefudgedWidth * params.compensationFactor - prefudgedWidth;\n\t\trefinements.total += refinements.compensationFactor;\n\t}\n\n\treturn {\n\t\tactualWidth: width + refinements.total,\n\t\tmetrics,\n\t\trefinements,\n\t};\n}\nmeasureText._context = undefined as CanvasRenderingContext2D | undefined;\n","import { useMemo } from 'react';\nimport { MeasureTextParams, measureTextParamsFromStyle } from '../drawing/measure-text';\nimport { useComputedStyle, UseComputedStyleResult } from './use-computed-style';\n\nexport interface UseMeasureTextParamsResult<TElement extends Element>\n\textends UseComputedStyleResult<TElement> {\n\tmeasureTextParams: MeasureTextParams | undefined;\n}\n\nexport function useMeasureTextParams<TElement extends Element>(\n\tfrequency: 'continuous' | 'initial',\n): UseMeasureTextParamsResult<TElement> {\n\tconst useComputedStyleResult: UseComputedStyleResult<TElement> = useComputedStyle<TElement>();\n\tlet measureTextParams = useMemo(\n\t\t(): MeasureTextParams | undefined =>\n\t\t\tuseComputedStyleResult.style &&\n\t\t\tmeasureTextParamsFromStyle(useComputedStyleResult.style),\n\t\t[useComputedStyleResult.style],\n\t);\n\tif (frequency === 'continuous') {\n\t\tmeasureTextParams =\n\t\t\tuseComputedStyleResult.style &&\n\t\t\tmeasureTextParamsFromStyle(useComputedStyleResult.style);\n\t}\n\treturn {\n\t\t...useComputedStyleResult,\n\t\tmeasureTextParams,\n\t};\n}\n","import { RefCallback, useCallback, useState } from 'react';\n\nexport interface UseComputedStyleResult<TElement extends Element> {\n\telement: TElement | undefined;\n\tstyle: CSSStyleDeclaration | undefined;\n\tref: RefCallback<TElement>;\n}\n\n/**\n * A React hook that returns an element and its computed style via a ref. Use as follows:\n *\n * ```javascript\n * function MyComponent() {\n *     const { element, ref, style } = useComputedStyle();\n *     return (\n *        <div ref={ref}>\n *        </div>\n *     );\n * }\n * ```\n */\nexport function useComputedStyle<TElement extends Element>(): UseComputedStyleResult<TElement> {\n\tconst [element, setElement] = useState<TElement>();\n\tconst [style, setStyle] = useState<CSSStyleDeclaration>();\n\tconst ref = useCallback((element: TElement | null): void => {\n\t\tsetElement(element ?? undefined);\n\t\tsetStyle(element ? window.getComputedStyle(element) : undefined);\n\t}, []);\n\treturn {\n\t\telement,\n\t\tstyle,\n\t\tref,\n\t};\n}\n","import { RefCallback, RefObject, useMemo } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport { measureText, MeasureTextResult } from '../drawing/measure-text';\nimport { useFont } from './use-font';\nimport { useMeasureTextParams } from './use-measure-text-params';\n\nconst debug = true;\n\nexport interface UseAutoscalingFontSizeResult<\n\tTParent extends HTMLElement,\n\tTChild extends HTMLElement\n> {\n\tchildRef: RefCallback<TChild>;\n\tparentRef: RefObject<TParent>;\n}\n\nexport function useAutoscalingFontSize<\n\tTParent extends HTMLElement,\n\tTChild extends HTMLElement\n>(): UseAutoscalingFontSizeResult<TParent, TChild> {\n\t// Listen to resizes of the parent.\n\tconst parent = useResizeObserver<TParent>();\n\n\t// Capture the initial font metrics of the child just once when its style becomes available.\n\tconst child = useMeasureTextParams<TChild>('initial');\n\tconst childHeights = useMemo(():\n\t\t| Record<'fontSize' | 'lineHeight' | 'maxHeight', number>\n\t\t| undefined => {\n\t\tif (child.style === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (debug) console.log('childHeights');\n\n\t\treturn {\n\t\t\tfontSize: Number.parseFloat(child.style.fontSize),\n\t\t\tmaxHeight: Number.parseFloat(child.style.maxHeight),\n\t\t\tlineHeight: Number.parseFloat(child.style.lineHeight),\n\t\t};\n\t}, [child.style]);\n\n\t// Compute the child's initial text width, ensuring that the font is loaded before making any\n\t// measurements.\n\tconst isFontReady: boolean = useFont(child.style?.font);\n\tconst childInnerText: string | undefined = child.element?.innerText;\n\tconst measureTextResult = useMemo((): MeasureTextResult | undefined => {\n\t\tif (!isFontReady || childInnerText === undefined || child.measureTextParams === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (debug) console.log('measureTextResult');\n\n\t\treturn measureText(childInnerText, child.measureTextParams);\n\t}, [childInnerText, child.measureTextParams, isFontReady]);\n\n\tif (\n\t\tchild.element !== undefined &&\n\t\tchildHeights !== undefined &&\n\t\tchildInnerText !== undefined &&\n\t\tmeasureTextResult !== undefined &&\n\t\tparent.ref.current !== null &&\n\t\tparent.width !== undefined\n\t) {\n\t\tif (debug) console.log('childScaledFontSize');\n\n\t\t// From the initial text width, compute a scaled font size that will fit the parent's width.\n\t\tconst fontSizeHorzFit: number =\n\t\t\tchildHeights.fontSize * (parent.width / measureTextResult.actualWidth);\n\n\t\t// Compute the largest font size that won't exceed the child's max height.\n\t\tconst fontSizeVertMax: number = !Number.isNaN(childHeights.maxHeight)\n\t\t\t? (childHeights.maxHeight * childHeights.fontSize) / childHeights.lineHeight\n\t\t\t: Number.MAX_VALUE;\n\n\t\t// Use the best option.\n\t\tconst fontSize = Math.min(fontSizeHorzFit, fontSizeVertMax);\n\n\t\tchild.element.style.setProperty('display', 'inline-block');\n\t\tchild.element.style.setProperty('font-size', `${fontSize}px`);\n\t\tchild.element.style.setProperty('white-space', 'nowrap');\n\n\t\tparent.ref.current.style.setProperty('max-width', '100%');\n\t}\n\n\treturn {\n\t\tchildRef: child.ref,\n\t\tparentRef: parent.ref,\n\t};\n}\n","import { useEffect, useState } from 'react';\n\nexport function useFont(font?: string): boolean {\n\tconst [fontReady, setFontReady] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tlet newFontReady: boolean = false;\n\t\tif (font) {\n\t\t\tnewFontReady = document.fonts.check(font);\n\t\t\tsetFontReady(newFontReady);\n\n\t\t\tif (!newFontReady) {\n\t\t\t\tdocument.fonts.ready.then((): void => setFontReady(true));\n\t\t\t}\n\t\t}\n\t}, [font]);\n\n\treturn fontReady;\n}\n","import React from 'react';\nimport { useAutoscalingFontSize } from '../hooks/use-autoscaling-font-size';\nimport { ResumeProps } from '../resume/resume-model';\n\nexport function CandidateName(props: ResumeProps) {\n\tconst { childRef, parentRef } = useAutoscalingFontSize<HTMLDivElement, HTMLHeadingElement>();\n\n\treturn (\n\t\t<div className=\"candidate-name-component\" ref={parentRef}>\n\t\t\t<h1 ref={childRef}>{props.resume.candidate.name}</h1>\n\t\t</div>\n\t);\n}\n","import * as d3 from 'd3';\nimport React, { useEffect, useMemo } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport { Experience, ResumeProps } from '../resume/resume-model';\n\ntype Props = ResumeProps;\n\nexport function ExperienceTimeline(props: Props) {\n\tconst { height, ref } = useResizeObserver<HTMLDivElement>();\n\n\tfunction startOfYear(date: Date): number {\n\t\treturn new Date(date.getFullYear(), 0).getTime();\n\t}\n\n\tfunction startOfNextYear(date: Date): number {\n\t\treturn new Date(date.getFullYear() + 1, 0).getTime();\n\t}\n\n\tconst years = useMemo((): Date[] => {\n\t\tconst max = new Date(\n\t\t\td3.max(props.resume.experiences, (experience: Experience): number =>\n\t\t\t\tstartOfNextYear(experience.finishDate ?? new Date()),\n\t\t\t) ?? startOfNextYear(new Date()),\n\t\t);\n\t\tconst min = new Date(\n\t\t\td3.min(props.resume.experiences, (experience: Experience): number =>\n\t\t\t\tstartOfYear(experience.startDate),\n\t\t\t) ?? startOfYear(new Date()),\n\t\t);\n\n\t\tconst years: Date[] = [];\n\t\tfor (\n\t\t\tlet year = min;\n\t\t\tyear.getTime() < max.getTime();\n\t\t\tyear = new Date(year.getFullYear() + 1, 0)\n\t\t) {\n\t\t\tyears.push(year);\n\t\t}\n\t\treturn years;\n\t}, [props.resume.experiences]);\n\n\tuseEffect((): void => {\n\t\tif (height === undefined || !ref.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = d3.select(ref.current);\n\n\t\tconst scale = d3\n\t\t\t.scaleTime()\n\t\t\t.domain([years[0], startOfNextYear(years[years.length - 1])])\n\t\t\t.range([height ?? 0, 0]);\n\n\t\tfunction yearBoxClass(_year: Date, yearIndex: number): string {\n\t\t\treturn yearIndex % 2 === 0 ? 'dark' : 'light';\n\t\t}\n\n\t\t// TODO: check for array length\n\t\tconst yearBoxHeight: number = scale(years[0]) - scale(years[1]);\n\t\tconst yearBoxWidth = 100;\n\t\tfunction yearBoxY(year: Date): number {\n\t\t\treturn scale(year) - yearBoxHeight;\n\t\t}\n\n\t\tcontainer\n\t\t\t.select('g.year-grid')\n\t\t\t.selectAll<SVGRectElement, Date>('rect')\n\t\t\t.data(years.slice().reverse())\n\t\t\t.join('rect')\n\t\t\t.attr('class', yearBoxClass)\n\t\t\t.attr('data-year', yearText)\n\t\t\t.attr('height', yearBoxHeight)\n\t\t\t.attr('width', yearBoxWidth)\n\t\t\t.attr('x', 0)\n\t\t\t.attr('y', yearBoxY);\n\n\t\tconst fontSize = 12;\n\n\t\tconst yearLabelX = fontSize;\n\n\t\tfunction yearLabelY(year: Date): number {\n\t\t\treturn scale(year) - (yearBoxHeight - fontSize) / 2;\n\t\t}\n\n\t\tfunction yearText(year: Date): string {\n\t\t\treturn year.getFullYear().toString();\n\t\t}\n\n\t\tcontainer\n\t\t\t.select('g.year-labels')\n\t\t\t.selectAll<SVGTextElement, Date>('text')\n\t\t\t.data(years)\n\t\t\t.join('text')\n\t\t\t.attr('data-year', yearText)\n\t\t\t.attr('x', yearLabelX)\n\t\t\t.attr('y', yearLabelY)\n\t\t\t.text(yearText);\n\t}, [height, ref, years]);\n\n\treturn (\n\t\t<div className=\"experience-timeline-component\" ref={ref}>\n\t\t\t<svg height=\"100%\" width=\"100%\">\n\t\t\t\t<g className=\"year-grid\" />\n\t\t\t\t<g className=\"year-labels\" />\n\t\t\t\t<g className=\"boxes\" />\n\t\t\t\t<g className=\"flyouts\" />\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n","export interface PointInit {\n\tx: number;\n\ty: number;\n}\n\nexport class Point implements Readonly<PointInit> {\n\tpublic constructor(init?: Partial<Readonly<PointInit>>) {\n\t\tthis.x = init?.x ?? 0;\n\t\tthis.y = init?.y ?? 0;\n\t}\n\n\tpublic readonly x: number;\n\tpublic readonly y: number;\n\n\tpublic static distance(p1: PointInit, p2: PointInit): number {\n\t\treturn Math.sqrt((p2.x - p1.x) ** 2 + (p2.y - p1.y) ** 2);\n\t}\n\n\tpublic static onLine(p1: PointInit, p2: PointInit, distanceFromP1: number): Point {\n\t\tconst distance: number = Point.distance(p1, p2);\n\t\tconst xProportion: number = (p2.x - p1.x) / distance;\n\t\tconst yProportion: number = (p2.y - p1.y) / distance;\n\t\treturn new Point({\n\t\t\tx: p1.x + xProportion * distanceFromP1,\n\t\t\ty: p1.y + yProportion * distanceFromP1,\n\t\t});\n\t}\n\n\tpublic toString(): string {\n\t\treturn `${this.x},${this.y}`;\n\t}\n}\n","import { Point } from './point';\n\nexport interface HexagonInit {\n\tcx: number;\n\tcy: number;\n\tr: number;\n}\n\nexport class Hexagon implements Readonly<HexagonInit> {\n\tpublic constructor(init?: Partial<Readonly<HexagonInit>>) {\n\t\tthis.cx = init?.cx ?? 0;\n\t\tthis.cy = init?.cy ?? 0;\n\t\tthis.r = init?.r ?? 0;\n\t}\n\n\tpublic readonly cx: number;\n\tpublic readonly cy: number;\n\tpublic readonly r: number;\n\n\tpublic toSvgPath(radiusOffset: number = 0, cornerRadius: number = 0): string {\n\t\tconst vertices: Point[] = [\n\t\t\tthis.vertex(0, radiusOffset),\n\t\t\tthis.vertex(1, radiusOffset),\n\t\t\tthis.vertex(2, radiusOffset),\n\t\t\tthis.vertex(3, radiusOffset),\n\t\t\tthis.vertex(4, radiusOffset),\n\t\t\tthis.vertex(5, radiusOffset),\n\t\t];\n\t\tif (cornerRadius === 0) {\n\t\t\treturn `M ${vertices.join(' L ')} Z`;\n\t\t} else {\n\t\t\tinterface QuadraticCurve {\n\t\t\t\tcontrol: Point;\n\t\t\t\tfinish: Point;\n\t\t\t\tstart: Point;\n\t\t\t}\n\t\t\tconst curves: QuadraticCurve[] = vertices.map(\n\t\t\t\t(currVertex: Point, index: number): QuadraticCurve => {\n\t\t\t\t\tconst prevVertex: Point =\n\t\t\t\t\t\tvertices[index === 0 ? vertices.length - 1 : index - 1];\n\t\t\t\t\tconst nextVertex: Point =\n\t\t\t\t\t\tvertices[index === vertices.length - 1 ? 0 : index + 1];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontrol: currVertex,\n\t\t\t\t\t\tfinish: Point.onLine(currVertex, nextVertex, cornerRadius),\n\t\t\t\t\t\tstart: Point.onLine(currVertex, prevVertex, cornerRadius),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tlet path: string = '';\n\t\t\tfor (const curve of curves) {\n\t\t\t\tpath += `${!path ? 'M' : 'L'} ${curve.start} Q ${curve.control} ${curve.finish}`;\n\t\t\t}\n\t\t\tpath += ' Z';\n\n\t\t\treturn path;\n\t\t}\n\t}\n\n\tpublic vertex(index: 0 | 1 | 2 | 3 | 4 | 5, radiusOffset: number = 0): Point {\n\t\t// The trigonometic functions of `Math` operate on the standard unit circle using the\n\t\t// Cartesian coordinate system. But the most friendly sequence of vertices in the SVG\n\t\t// coordinate space are to starting from top-center and going clockwise from there,\n\t\t// progressing negatively by PI / 3 and flipping the y-offsets by negating `Math.sin()`.\n\t\tconst topCenterRadians: number = Math.PI / 2;\n\t\tconst vertexRadians: number = topCenterRadians - (Math.PI * index) / 3;\n\t\treturn new Point({\n\t\t\tx: this.cx + (this.r + radiusOffset) * Math.cos(vertexRadians),\n\t\t\ty: this.cy + (this.r + radiusOffset) * -Math.sin(vertexRadians),\n\t\t});\n\t}\n}\n","import { Hexagon } from './hexagon';\n\nexport interface HexGridCoordinate {\n\tcolumn: number;\n\trow: number;\n}\n\n/**\n * Encapsulates logic for working with double-width (pointy-topped) hexagonal grid [as opposed\n * to double-height (flat-topped) grid].\n *\n * See <https://www.redblobgames.com/grids/hexagons/#coordinates-doubled>.\n */\nexport class HexGrid {\n\tpublic static fitToWidth(width: number, columns: number): HexGrid {\n\t\treturn new HexGrid((2 * width) / ((columns + 1) * Math.sqrt(3)));\n\t}\n\n\tpublic static fitToHeight(height: number, rows: number): HexGrid {\n\t\treturn new HexGrid(height / ((rows - 1) * Math.sin(Math.PI / 6) + rows + 1));\n\t}\n\n\tpublic constructor(public readonly hexagonRadius: number) {}\n\n\tpublic distance(a: HexGridCoordinate, b: HexGridCoordinate): number {\n\t\tconst dx: number = Math.abs(a.column - b.column);\n\t\tconst dy: number = Math.abs(a.row - b.row);\n\t\treturn dy + Math.max(0, (dx - dy) / 2);\n\t}\n\n\tpublic hexagon(coordinate: HexGridCoordinate): Hexagon {\n\t\treturn new Hexagon({\n\t\t\tcx: ((this.hexagonRadius * Math.sqrt(3)) / 2) * (coordinate.column + 1),\n\t\t\tcy: this.hexagonRadius + this.hexagonRadius * 1.5 * coordinate.row,\n\t\t\tr: this.hexagonRadius,\n\t\t});\n\t}\n\tpublic height(rows: number): number {\n\t\treturn rows > 0 ? 2 * this.hexagonRadius + (rows - 1) * 1.5 * this.hexagonRadius : 0;\n\t}\n}\n","import { PointInit } from './point';\nimport { SizeInit } from './size';\n\nexport type RectangleInit = PointInit & SizeInit;\n\nexport class Rectangle implements Readonly<RectangleInit> {\n\tpublic constructor(init?: Partial<RectangleInit>) {\n\t\tthis.height = init?.height ?? 0;\n\t\tthis.width = init?.width ?? 0;\n\t\tthis.x = init?.x ?? 0;\n\t\tthis.y = init?.y ?? 0;\n\t}\n\n\tpublic readonly height: number;\n\tpublic readonly width: number;\n\tpublic readonly x: number;\n\tpublic readonly y: number;\n\n\tpublic bottom(): number {\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic right(): number {\n\t\treturn this.x + this.width;\n\t}\n}\n","import classNames from 'classnames';\nimport React, { Fragment, useMemo } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport { HexGrid } from '../drawing/hex-grid';\nimport { Hexagon } from '../drawing/hexagon';\nimport { sideOfSquareInCircle } from '../drawing/inscriptions';\nimport { measureText } from '../drawing/measure-text';\nimport { Point } from '../drawing/point';\nimport { Rectangle } from '../drawing/rectangle';\nimport { useMeasureTextParams } from '../hooks/use-measure-text-params';\nimport { Interest, ResumeProps } from '../resume/resume-model';\n\nconst debug = false;\n\nexport function InterestsHexGrid(props: ResumeProps) {\n\tconst { ref: divRef, width } = useResizeObserver<HTMLDivElement>();\n\tconst div: HTMLDivElement | null = divRef.current;\n\n\tconst labelsGroup = useMeasureTextParams<SVGGElement>('initial');\n\n\tinterface HexGridDimensions {\n\t\tcolumns: number;\n\t\theight: number;\n\t\tgrid: HexGrid;\n\t\tlabelFontSize: number;\n\t\trows: number;\n\t\ttextSquareSide: number;\n\t\twidth: number;\n\t}\n\tconst hexGridDimensions = useMemo((): HexGridDimensions | undefined => {\n\t\tlet result: HexGridDimensions | undefined;\n\t\tif (div && labelsGroup.measureTextParams && labelsGroup.style && width) {\n\t\t\tconst allInterests: Interest[] = Object.values(props.resume.interests).flat();\n\t\t\tconst columns: number =\n\t\t\t\tMath.max(...allInterests.map((interest: Interest): number => interest.column)) + 1;\n\t\t\tconst rows: number =\n\t\t\t\tMath.max(...allInterests.map((interest: Interest): number => interest.row)) + 1;\n\n\t\t\tconst grid: HexGrid = HexGrid.fitToWidth(width, columns);\n\t\t\tconst height: number = grid.height(rows);\n\t\t\tconst textSquareSide: number = sideOfSquareInCircle(grid.hexagonRadius);\n\n\t\t\tconst maxWordWidth: number = Math.max(\n\t\t\t\t...allInterests\n\t\t\t\t\t.flatMap((interest: Interest): string[] => interest.name.split(/\\s+/))\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(word: string): number =>\n\t\t\t\t\t\t\tmeasureText(word, labelsGroup.measureTextParams).actualWidth,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tconst labelFontSize: number =\n\t\t\t\t(Number.parseFloat(labelsGroup.style.fontSize) * textSquareSide) / maxWordWidth;\n\n\t\t\tresult = {\n\t\t\t\tcolumns,\n\t\t\t\tgrid,\n\t\t\t\theight,\n\t\t\t\tlabelFontSize,\n\t\t\t\trows,\n\t\t\t\ttextSquareSide,\n\t\t\t\twidth,\n\t\t\t};\n\t\t}\n\t\treturn result;\n\t}, [div, labelsGroup.measureTextParams, labelsGroup.style, props.resume.interests, width]);\n\n\tfunction calcAnimationOffsetStyle(\n\t\tdimensions: HexGridDimensions | undefined,\n\t\thexagon: Hexagon | undefined,\n\t): object | undefined {\n\t\tif (!dimensions || !hexagon) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst topLeft = new Point();\n\t\tconst bottomRight = new Point({ x: dimensions.width, y: dimensions.height });\n\t\treturn {\n\t\t\tstyle: {\n\t\t\t\t'--animation-offset':\n\t\t\t\t\tPoint.distance(topLeft, {\n\t\t\t\t\t\tx: hexagon.cx ?? 0,\n\t\t\t\t\t\ty: hexagon.cy ?? 0,\n\t\t\t\t\t}) / Point.distance(topLeft, bottomRight),\n\t\t\t},\n\t\t};\n\t}\n\n\treturn (\n\t\t<div className=\"interests-hexgrid-component\" ref={divRef}>\n\t\t\t<svg style={{ height: hexGridDimensions?.height, width: '100%' }}>\n\t\t\t\t<g className=\"root\">\n\t\t\t\t\t<g className=\"hexagons\">\n\t\t\t\t\t\t{Object.entries(props.resume.interests).map(\n\t\t\t\t\t\t\t([cluster, interests]: [string, Interest[]]) => (\n\t\t\t\t\t\t\t\t<g className=\"cluster\" key={cluster}>\n\t\t\t\t\t\t\t\t\t{interests.map((interest: Interest) => {\n\t\t\t\t\t\t\t\t\t\tconst hexagon:\n\t\t\t\t\t\t\t\t\t\t\t| Hexagon\n\t\t\t\t\t\t\t\t\t\t\t| undefined = hexGridDimensions?.grid.hexagon(interest);\n\t\t\t\t\t\t\t\t\t\tconst isClusterName: boolean = interest.name === cluster;\n\t\t\t\t\t\t\t\t\t\tconst hexagonOuterRadiusOffset = -1.5;\n\t\t\t\t\t\t\t\t\t\tconst hexagonInnerRadiusOffset = -5.5;\n\t\t\t\t\t\t\t\t\t\tconst hexagonCornerRadius = 3;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Fragment key={interest.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t{hexagon && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<g\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'cluster-name': isClusterName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'hexagon': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...calcAnimationOffsetStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexGridDimensions,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td={hexagon.toSvgPath(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagonOuterRadiusOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagonCornerRadius,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isClusterName && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td={hexagon.toSvgPath(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagonInnerRadiusOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagonCornerRadius,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{debug && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...hexagon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tr=\"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...hexagon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstroke=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)}\n\t\t\t\t\t</g>\n\n\t\t\t\t\t<g className=\"labels\" ref={labelsGroup.ref}>\n\t\t\t\t\t\t{Object.entries(props.resume.interests).map(\n\t\t\t\t\t\t\t([cluster, interests]: [string, Interest[]]) => (\n\t\t\t\t\t\t\t\t<g className=\"cluster\" key={cluster}>\n\t\t\t\t\t\t\t\t\t{interests.map((interest: Interest) => {\n\t\t\t\t\t\t\t\t\t\tconst hexagon:\n\t\t\t\t\t\t\t\t\t\t\t| Hexagon\n\t\t\t\t\t\t\t\t\t\t\t| undefined = hexGridDimensions?.grid.hexagon(interest);\n\t\t\t\t\t\t\t\t\t\tconst isClusterName: boolean = interest.name === cluster;\n\t\t\t\t\t\t\t\t\t\tconst textRectangle =\n\t\t\t\t\t\t\t\t\t\t\thexagon &&\n\t\t\t\t\t\t\t\t\t\t\tnew Rectangle({\n\t\t\t\t\t\t\t\t\t\t\t\tx:\n\t\t\t\t\t\t\t\t\t\t\t\t\thexagon.cx -\n\t\t\t\t\t\t\t\t\t\t\t\t\t(hexGridDimensions?.textSquareSide ?? 0) / 2,\n\t\t\t\t\t\t\t\t\t\t\t\ty:\n\t\t\t\t\t\t\t\t\t\t\t\t\thexagon.cy -\n\t\t\t\t\t\t\t\t\t\t\t\t\t(hexGridDimensions?.textSquareSide ?? 0) / 2,\n\t\t\t\t\t\t\t\t\t\t\t\twidth: hexGridDimensions?.textSquareSide,\n\t\t\t\t\t\t\t\t\t\t\t\theight: hexGridDimensions?.textSquareSide,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Fragment key={interest.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t{hexagon && textRectangle && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<g\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'cluster-name': isClusterName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'label': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...calcAnimationOffsetStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexGridDimensions,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexagon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{debug && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstroke=\"blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...textRectangle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<foreignObject {...textRectangle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'table-cell',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thexGridDimensions?.labelFontSize,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: textRectangle.height,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: textRectangle.width,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'http://www.w3.org/1999/xhtml',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{interest.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</foreignObject>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)}\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n","export function radiusOfCircleInHexagon(hexagonRadius: number): number {\n\treturn hexagonRadius * Math.cos(Math.PI / 6);\n}\n\nexport function sideOfSquareInCircle(circleRadius: number): number {\n\treturn circleRadius * Math.cos(Math.PI / 4) * 2;\n}\n","import React from 'react';\nimport { ResumeProps } from '../resume/resume-model';\n\nexport function Mission(props: ResumeProps) {\n\treturn (\n\t\t<div className=\"mission-component\">\n\t\t\t<p>{props.resume.mission}</p>\n\t\t</div>\n\t);\n}\n","import classNames from 'classnames';\nimport React, { ComponentProps, PropsWithChildren } from 'react';\n\nexport function generateSectionId(heading: string): string {\n\treturn heading\n\t\t.split(' ')\n\t\t.filter((word: string): boolean => word.length > 1)\n\t\t.map((word: string): string => word.toLowerCase())\n\t\t.join('-');\n}\n\ntype Props = PropsWithChildren<\n\tComponentProps<'section'> & {\n\t\theading?: string;\n\t\tid: string;\n\t}\n>;\n\nexport function Section(props: Props) {\n\tconst { children, heading, ...sectionProps } = props;\n\treturn (\n\t\t<section\n\t\t\t{...sectionProps}\n\t\t\tclassName={classNames('section-component', sectionProps.className)}\n\t\t>\n\t\t\t{heading && <h2>{heading}</h2>}\n\t\t\t{children}\n\t\t</section>\n\t);\n}\n","import * as d3 from 'd3';\nimport { uniqueId } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport useResizeObserver from 'use-resize-observer';\nimport { measureText, MeasureTextResult } from '../drawing/measure-text';\nimport { Point } from '../drawing/point';\nimport { Rectangle } from '../drawing/rectangle';\nimport { useMeasureTextParams, UseMeasureTextParamsResult } from '../hooks/use-measure-text-params';\nimport {\n\tgetRating,\n\tgetSkill,\n\tResumeProps,\n\tSkillRating,\n\tskillRatingLevels,\n\tskillRatingMax,\n} from '../resume/resume-model';\n\nconst debug = false;\n\nconst durations = {\n\tget short(): number {\n\t\treturn 100;\n\t},\n\tget medium(): number {\n\t\treturn this.short * 5;\n\t},\n\tget long(): number {\n\t\treturn this.short * 20;\n\t},\n};\n\nconst xLabelsRotateDegrees = -30;\nconst xLabelsRotateRadians = (xLabelsRotateDegrees * Math.PI) / 180;\n\ninterface Props extends ResumeProps {\n\tinitialSortBy?: keyof SkillRating;\n\tinitialSortDesc?: boolean;\n\tskillCategory: string;\n}\n\nexport function SkillRatingsChart(props: Props) {\n\tif (!(props.skillCategory in props.resume.skills)) {\n\t\tthrow new Error(\n\t\t\t`Invalid skill category key \\`props.skillCategory\\`: '${props.skillCategory}'`,\n\t\t);\n\t}\n\n\t// Declare some helpful skill variables.\n\tconst skillRatings: SkillRating[] = props.resume.skills[props.skillCategory];\n\n\tconst allSkills = useMemo(\n\t\t(): string[] =>\n\t\t\tObject.values(\n\t\t\t\tprops.resume.skills,\n\t\t\t).flatMap((innerSkillRatings: SkillRating[] | undefined) =>\n\t\t\t\t(innerSkillRatings ?? []).map(getSkill),\n\t\t\t),\n\t\t[props.resume.skills],\n\t);\n\n\tconst skillLevels: SkillRating[] = useMemo(skillRatingLevels, [skillRatingLevels]);\n\tconst allLevels = useMemo((): string[] => skillLevels.map(getSkill), [skillLevels]);\n\n\t// Declare some state and a function for sorting.\n\tconst [sortBy, setSortBy] = useState<keyof SkillRating>(props.initialSortBy ?? 'skill');\n\tconst [sortDesc, setSortDesc] = useState<boolean>(props.initialSortDesc ?? sortBy === 'rating');\n\n\tconst sortComparer = useCallback(\n\t\t(left: SkillRating, right: SkillRating): number => {\n\t\t\tlet result: number =\n\t\t\t\tsortBy === 'rating' && left.rating !== right.rating\n\t\t\t\t\t? left.rating - right.rating\n\t\t\t\t\t: left.skill.localeCompare(right.skill);\n\t\t\tif (sortDesc) {\n\t\t\t\tresult = -result;\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t[sortBy, sortDesc],\n\t);\n\n\tconst sortedSkillRatings = useMemo(\n\t\t(): SkillRating[] => skillRatings.slice().sort(sortComparer),\n\t\t[skillRatings, sortComparer],\n\t);\n\n\t// Declare some variables that determine whether to start debut animations.\n\tconst [svgRef, inView] = useInView({ threshold: 0.25, triggerOnce: true });\n\n\t// Declare some variables for dynamic (re)sizing.\n\tconst { ref: divRef, width } = useResizeObserver<HTMLDivElement>();\n\tconst div: HTMLDivElement | null = divRef.current;\n\n\tinterface LabelsGroupResult extends UseMeasureTextParamsResult<SVGGElement> {\n\t\tfontSize: number | undefined;\n\t\tlineHeight: number | undefined;\n\t}\n\n\tfunction useLabelsGroup(): LabelsGroupResult {\n\t\tconst useMeasureTextParamsResult: UseMeasureTextParamsResult<SVGGElement> = useMeasureTextParams<\n\t\t\tSVGGElement\n\t\t>('initial');\n\t\tconst style: CSSStyleDeclaration | undefined = useMeasureTextParamsResult.style;\n\t\treturn {\n\t\t\t...useMeasureTextParamsResult,\n\t\t\tfontSize: style && (Number.parseFloat(style.fontSize) || undefined),\n\t\t\tlineHeight: style && (Number.parseFloat(style.lineHeight) || undefined),\n\t\t};\n\t}\n\n\tconst xLabelsGroup: LabelsGroupResult = useLabelsGroup();\n\tconst yLabelsGroup: LabelsGroupResult = useLabelsGroup();\n\n\ttype Regions = Record<'chart' | 'plot' | 'xLabels' | 'yLabels', Rectangle>;\n\tconst regions = useMemo((): Regions | undefined => {\n\t\tlet result: Regions | undefined;\n\t\tif (\n\t\t\txLabelsGroup &&\n\t\t\txLabelsGroup.fontSize &&\n\t\t\tyLabelsGroup &&\n\t\t\tyLabelsGroup.fontSize &&\n\t\t\tyLabelsGroup.lineHeight &&\n\t\t\twidth !== undefined\n\t\t) {\n\t\t\t// Determine the y-labels width.\n\t\t\tlet skillWidthMax = 0;\n\t\t\tfor (const skill of allSkills) {\n\t\t\t\tconst result: MeasureTextResult = measureText(\n\t\t\t\t\tskill,\n\t\t\t\t\tyLabelsGroup.measureTextParams,\n\t\t\t\t);\n\t\t\t\tskillWidthMax = Math.max(skillWidthMax, result.actualWidth);\n\t\t\t}\n\t\t\tconst yLabelsWidth = Math.ceil(Math.min(skillWidthMax, width / 2));\n\n\t\t\t// Determine the x-labels height.\n\t\t\tlet unrotatedWidthMax = 0;\n\t\t\tfor (const level of allLevels) {\n\t\t\t\tconst result: MeasureTextResult = measureText(\n\t\t\t\t\tlevel,\n\t\t\t\t\txLabelsGroup.measureTextParams,\n\t\t\t\t);\n\t\t\t\tunrotatedWidthMax = Math.max(unrotatedWidthMax, result.actualWidth);\n\t\t\t}\n\n\t\t\tconst adjacent = Math.abs(Math.cos(xLabelsRotateRadians) * xLabelsGroup.fontSize);\n\t\t\tconst opposite = Math.abs(Math.sin(xLabelsRotateRadians) * unrotatedWidthMax);\n\t\t\tconst xLabelsHeight = Math.ceil(adjacent + opposite);\n\n\t\t\t// Create bounding rectangles for the various regions of the chart.\n\t\t\tconst plotRegionMargin = Math.min(xLabelsGroup.fontSize, yLabelsGroup.fontSize) / 2;\n\n\t\t\tconst chart = new Rectangle({\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth,\n\t\t\t\theight:\n\t\t\t\t\tskillRatings.length * yLabelsGroup.lineHeight +\n\t\t\t\t\tplotRegionMargin +\n\t\t\t\t\txLabelsHeight,\n\t\t\t});\n\n\t\t\tconst plot = new Rectangle({\n\t\t\t\tx: chart.x + yLabelsWidth + plotRegionMargin,\n\t\t\t\ty: chart.y,\n\t\t\t\twidth: chart.width - yLabelsWidth - plotRegionMargin,\n\t\t\t\theight: skillRatings.length * yLabelsGroup.lineHeight,\n\t\t\t});\n\n\t\t\tconst yLabels = new Rectangle({\n\t\t\t\tx: chart.x,\n\t\t\t\ty: chart.y,\n\t\t\t\twidth: yLabelsWidth,\n\t\t\t\theight: skillRatings.length * yLabelsGroup.lineHeight,\n\t\t\t});\n\n\t\t\tconst xLabels = new Rectangle({\n\t\t\t\tx: chart.x,\n\t\t\t\ty: chart.bottom() - xLabelsHeight,\n\t\t\t\twidth: chart.width,\n\t\t\t\theight: xLabelsHeight,\n\t\t\t});\n\n\t\t\tresult = {\n\t\t\t\tchart,\n\t\t\t\tplot,\n\t\t\t\txLabels,\n\t\t\t\tyLabels,\n\t\t\t};\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log({ regions: result });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}, [allLevels, allSkills, skillRatings.length, width, xLabelsGroup, yLabelsGroup]);\n\n\tinterface XAxis {\n\t\tgetX(skillRating: SkillRating): number;\n\t\tscale: d3.ScaleLinear<number, number>;\n\t}\n\tconst xAxis = useMemo((): XAxis | undefined => {\n\t\tlet result: XAxis | undefined;\n\t\tif (regions) {\n\t\t\tconst scale = d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([0, skillRatingMax])\n\t\t\t\t.range([regions.plot.x, regions.plot.right()]);\n\t\t\tresult = {\n\t\t\t\tgetX(skillRating: SkillRating): number {\n\t\t\t\t\treturn scale(skillRating.rating);\n\t\t\t\t},\n\t\t\t\tscale,\n\t\t\t};\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log({ xAxis: result });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}, [regions]);\n\n\t// Draw the x-axis grid polylines.\n\tuseEffect((): void => {\n\t\tif (div && regions && xAxis) {\n\t\t\tconst xGridPolyline = {\n\t\t\t\tfill: 'none',\n\t\t\t\t// This function calculates the polyline points of a single grid line, which have\n\t\t\t\t// \"tails (a.k.a. axis marks) that extend downward from the plot region into the\n\t\t\t\t// x-axis labels region. The tails are the hypotenuse of a right triangle having\n\t\t\t\t// height `opposite` and angle `xLabelsRotateRadians` (clockwise radians as is\n\t\t\t\t// SVG's convention).\n\t\t\t\tpoints: (skillLevel: SkillRating): string => {\n\t\t\t\t\tconst opposite = regions.xLabels.height;\n\t\t\t\t\tconst adjacent = opposite / Math.tan(Math.abs(xLabelsRotateRadians));\n\n\t\t\t\t\tconst x0: number = xAxis.getX(skillLevel);\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew Point({ x: x0, y: regions.plot.y }),\n\t\t\t\t\t\tnew Point({ x: x0, y: regions.xLabels.y }),\n\t\t\t\t\t\tnew Point({ x: x0 - adjacent, y: regions.xLabels.bottom() }),\n\t\t\t\t\t].join(' ');\n\t\t\t\t},\n\t\t\t};\n\n\t\t\td3.select(div)\n\t\t\t\t.select('g.x-grid')\n\t\t\t\t.selectAll('polyline')\n\t\t\t\t.data(skillLevels)\n\t\t\t\t.join('polyline')\n\t\t\t\t.attr('data-level', getSkill)\n\t\t\t\t.attr('data-rating', getRating)\n\t\t\t\t.attr('fill', xGridPolyline.fill)\n\t\t\t\t.attr('points', xGridPolyline.points);\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log('rendered x-grid');\n\t\t\t}\n\t\t}\n\t}, [div, regions, skillLevels, xAxis]);\n\n\t// Draw the x-axis labels.\n\tuseEffect((): void => {\n\t\tif (div && regions && xAxis && xLabelsGroup && xLabelsGroup.fontSize !== undefined) {\n\t\t\tconst xLabel = {\n\t\t\t\ttextAnchor: 'end',\n\t\t\t\ttransform: (skillLevel: SkillRating): string =>\n\t\t\t\t\t`rotate(${xLabelsRotateDegrees},${xAxis.getX(skillLevel)},${\n\t\t\t\t\t\tregions.xLabels.y\n\t\t\t\t\t})`,\n\t\t\t\tx: xAxis.getX,\n\t\t\t\ty: regions.xLabels.y + xLabelsGroup.fontSize,\n\t\t\t};\n\n\t\t\td3.select(div)\n\t\t\t\t.select('g.x-labels')\n\t\t\t\t.selectAll('text')\n\t\t\t\t.data(skillLevels)\n\t\t\t\t.join('text')\n\t\t\t\t.attr('data-level', getSkill)\n\t\t\t\t.attr('data-rating', getRating)\n\t\t\t\t.attr('text-anchor', xLabel.textAnchor)\n\t\t\t\t.attr('transform', xLabel.transform)\n\t\t\t\t.attr('x', xLabel.x)\n\t\t\t\t.attr('y', xLabel.y)\n\t\t\t\t.text(getSkill);\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log('rendered x-labels');\n\t\t\t}\n\t\t}\n\t}, [div, skillLevels, regions, xAxis, xLabelsGroup]);\n\n\t// Draw the y-axis labels.\n\tuseEffect((): void => {\n\t\tif (\n\t\t\tdiv &&\n\t\t\tinView &&\n\t\t\tregions &&\n\t\t\tyLabelsGroup &&\n\t\t\tyLabelsGroup.fontSize !== undefined &&\n\t\t\tyLabelsGroup.lineHeight !== undefined\n\t\t) {\n\t\t\tconst yLabel = {\n\t\t\t\tfadeInDelay: (_skillRating: SkillRating, skillIndex: number): number =>\n\t\t\t\t\tskillIndex * durations.short,\n\t\t\t\tfadeInDuration: durations.medium,\n\t\t\t\tfadeInOpacityFrom: 0,\n\t\t\t\tfadeInOpacityTo: 1,\n\t\t\t\tfadeInTransition: 'fade-in',\n\t\t\t\tsortDuration: durations.medium,\n\t\t\t\tsortTransition: 'sort',\n\t\t\t\ttextAnchor: 'end',\n\t\t\t\tx: regions.yLabels.right(),\n\t\t\t\ty: (_skillRating: SkillRating, skillIndex: number): number =>\n\t\t\t\t\tskillIndex * yLabelsGroup.lineHeight! + yLabelsGroup.fontSize!,\n\t\t\t};\n\n\t\t\td3.select(div)\n\t\t\t\t.select('g.y-labels')\n\t\t\t\t.selectAll<SVGTextElement, SkillRating>('text')\n\t\t\t\t.data(sortedSkillRatings, getSkill)\n\t\t\t\t.join(\n\t\t\t\t\t(enter) =>\n\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t.append('text')\n\t\t\t\t\t\t\t.attr('data-skill', getSkill)\n\t\t\t\t\t\t\t.attr('data-rating', getRating)\n\t\t\t\t\t\t\t.attr('text-anchor', yLabel.textAnchor)\n\t\t\t\t\t\t\t.attr('opacity', yLabel.fadeInOpacityFrom)\n\t\t\t\t\t\t\t.attr('x', yLabel.x)\n\t\t\t\t\t\t\t.attr('y', yLabel.y)\n\t\t\t\t\t\t\t.text(getSkill)\n\t\t\t\t\t\t\t.call((enter) =>\n\t\t\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t\t\t.transition(yLabel.fadeInTransition)\n\t\t\t\t\t\t\t\t\t.delay(yLabel.fadeInDelay)\n\t\t\t\t\t\t\t\t\t.duration(yLabel.fadeInDuration)\n\t\t\t\t\t\t\t\t\t.attr('opacity', yLabel.fadeInOpacityTo),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t(update) =>\n\t\t\t\t\t\tupdate.call((update) =>\n\t\t\t\t\t\t\tupdate\n\t\t\t\t\t\t\t\t.transition(yLabel.sortTransition)\n\t\t\t\t\t\t\t\t.duration(yLabel.sortDuration)\n\t\t\t\t\t\t\t\t.attr('y', yLabel.y),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log('rendered y-labels');\n\t\t\t}\n\t\t}\n\t}, [div, inView, sortedSkillRatings, regions, yLabelsGroup]);\n\n\t// Draw the bars.\n\tuseEffect((): void => {\n\t\tif (\n\t\t\tdiv &&\n\t\t\tinView &&\n\t\t\txAxis &&\n\t\t\tyLabelsGroup &&\n\t\t\tyLabelsGroup.fontSize !== undefined &&\n\t\t\tyLabelsGroup.lineHeight !== undefined\n\t\t) {\n\t\t\tconst bar = {\n\t\t\t\tgrowInDelay: (_skillRating: SkillRating, skillIndex: number): number =>\n\t\t\t\t\tskillIndex * durations.short,\n\t\t\t\tgrowInDuration: durations.long,\n\t\t\t\tgrowInTransition: 'grow-in',\n\t\t\t\theight: yLabelsGroup.fontSize * 0.75,\n\t\t\t\tx: xAxis.scale(0),\n\t\t\t\ty: (_skillRating: SkillRating, skillIndex: number): number =>\n\t\t\t\t\tskillIndex * yLabelsGroup.lineHeight! + yLabelsGroup.fontSize! * 0.3,\n\t\t\t\tsortDuration: durations.medium,\n\t\t\t\tsortTransition: 'sort',\n\t\t\t\twidthFrom: 0,\n\t\t\t\twidth: (skillRating: SkillRating): number => xAxis.getX(skillRating) - bar.x,\n\t\t\t};\n\n\t\t\td3.select(div)\n\t\t\t\t.select('g.bars')\n\t\t\t\t.selectAll<SVGRectElement, SkillRating>('rect')\n\t\t\t\t.data(sortedSkillRatings, getSkill)\n\t\t\t\t.join(\n\t\t\t\t\t(enter) =>\n\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t.append('rect')\n\t\t\t\t\t\t\t.attr('data-skill', getSkill)\n\t\t\t\t\t\t\t.attr('data-rating', getRating)\n\t\t\t\t\t\t\t.attr('height', bar.height)\n\t\t\t\t\t\t\t.attr('width', bar.widthFrom)\n\t\t\t\t\t\t\t.attr('x', bar.x)\n\t\t\t\t\t\t\t.attr('y', bar.y)\n\t\t\t\t\t\t\t.call((enter) =>\n\t\t\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t\t\t.transition(bar.growInTransition)\n\t\t\t\t\t\t\t\t\t.delay(bar.growInDelay)\n\t\t\t\t\t\t\t\t\t.duration(bar.growInDuration)\n\t\t\t\t\t\t\t\t\t.attr('width', bar.width),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t(update) =>\n\t\t\t\t\t\tupdate.call((update) =>\n\t\t\t\t\t\t\tupdate\n\t\t\t\t\t\t\t\t.attr('width', bar.width)\n\t\t\t\t\t\t\t\t.transition(bar.sortTransition)\n\t\t\t\t\t\t\t\t.duration(bar.sortDuration)\n\t\t\t\t\t\t\t\t.attr('y', bar.y),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\tif (debug) {\n\t\t\t\tconsole.log('rendered bars');\n\t\t\t}\n\t\t}\n\t}, [div, inView, sortedSkillRatings, xAxis, yLabelsGroup]);\n\n\t// Create some unique IDs for SVG fragment IDs.\n\tconst [xGridLinearGradientId] = useState(uniqueId('x-grid-linear-gradient-'));\n\tconst [xGridMaskId] = useState(uniqueId('x-grid-mask-'));\n\n\tconst [barsLinearGradientId] = useState(uniqueId('bars-linear-gradient-'));\n\tconst [barsMaskId] = useState(uniqueId('bars-mask-'));\n\n\treturn (\n\t\t<div className=\"skill-ratings-chart-component\" ref={divRef}>\n\t\t\t<svg height={regions?.chart.height} ref={svgRef} width=\"100%\">\n\t\t\t\t<defs>\n\t\t\t\t\t{/* Fade out the x-grid tails from top to bottom with a transparency mask. */}\n\t\t\t\t\t<linearGradient id={xGridLinearGradientId} x1=\"0%\" x2=\"0%\" y1=\"0%\" y2=\"100%\">\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset={regions && 1 - regions.xLabels.height / regions.chart.height}\n\t\t\t\t\t\t\tstopColor=\"white\"\n\t\t\t\t\t\t\tstopOpacity=\"1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\n\t\t\t\t\t</linearGradient>\n\t\t\t\t\t<mask id={xGridMaskId}>\n\t\t\t\t\t\t<rect fill={`url(#${xGridLinearGradientId})`} {...regions?.chart} />\n\t\t\t\t\t</mask>\n\n\t\t\t\t\t{/* Fade in the bars from left to right with a transparency mask. */}\n\t\t\t\t\t<linearGradient id={barsLinearGradientId}>\n\t\t\t\t\t\t<stop offset=\"0\" stopColor=\"white\" stopOpacity=\"0.25\" />\n\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"white\" stopOpacity=\"1\" />\n\t\t\t\t\t</linearGradient>\n\t\t\t\t\t<mask id={barsMaskId}>\n\t\t\t\t\t\t<rect fill={`url(#${barsLinearGradientId})`} {...regions?.plot} />\n\t\t\t\t\t</mask>\n\t\t\t\t</defs>\n\n\t\t\t\t{debug && (\n\t\t\t\t\t<g className=\"regions\">\n\t\t\t\t\t\t{regions &&\n\t\t\t\t\t\t\tObject.entries(regions).map(([key, region]: [string, Rectangle]) => (\n\t\t\t\t\t\t\t\t<rect key={key} fill=\"none\" stroke=\"red\" {...region} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</g>\n\t\t\t\t)}\n\t\t\t\t<g className=\"x-grid\" mask={`url(#${xGridMaskId})`} />\n\t\t\t\t<g className=\"x-labels\" ref={xLabelsGroup.ref} />\n\t\t\t\t<g\n\t\t\t\t\tclassName=\"y-labels\"\n\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\tsetSortDesc(sortBy === 'skill' ? !sortDesc : false);\n\t\t\t\t\t\tsetSortBy('skill');\n\t\t\t\t\t}}\n\t\t\t\t\tref={yLabelsGroup.ref}\n\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t/>\n\t\t\t\t<g\n\t\t\t\t\tclassName=\"bars\"\n\t\t\t\t\tmask={`url(#${barsMaskId})`}\n\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\tsetSortDesc(sortBy === 'rating' ? !sortDesc : true);\n\t\t\t\t\t\tsetSortBy('rating');\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { ResumeProps } from '../resume/resume-model';\nimport { generateSectionId, Section } from './Section';\nimport { SkillRatingsChart } from './SkillRatingsChart';\n\nexport function SkillRatingsChartList(props: ResumeProps) {\n\treturn (\n\t\t<>\n\t\t\t{Object.keys(props.resume.skills).map((skillCategory: string) => (\n\t\t\t\t<Section\n\t\t\t\t\theading={skillCategory}\n\t\t\t\t\tid={generateSectionId(skillCategory)}\n\t\t\t\t\tkey={skillCategory}\n\t\t\t\t>\n\t\t\t\t\t<SkillRatingsChart {...props} skillCategory={skillCategory} />\n\t\t\t\t</Section>\n\t\t\t))}\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { ResumeProps } from '../resume/resume-model';\nimport { CandidateContactServiceList } from './CandidateContactServiceList';\nimport { CandidateName } from './CandidateName';\nimport { ExperienceTimeline } from './ExperienceTimeline';\nimport { InterestsHexGrid } from './InterestsHexGrid';\nimport { Mission } from './Mission';\nimport { Section } from './Section';\nimport { SkillRatingsChartList } from './SkillRatingsChartList';\n\nexport function Resume(props: ResumeProps) {\n\treturn (\n\t\t<div className=\"p-4 sm:p-8\">\n\t\t\t<div className=\"container gap-12 grid grid-cols-1 mx-auto resume-component\">\n\t\t\t\t<header className=\"gap-x-12 gap-y-6 grid grid-cols-1 lg:grid-cols-2\">\n\t\t\t\t\t<Section id=\"candidate\">\n\t\t\t\t\t\t<CandidateName {...props} />\n\t\t\t\t\t\t<CandidateContactServiceList {...props} />\n\t\t\t\t\t</Section>\n\t\t\t\t\t<Section id=\"mission\">\n\t\t\t\t\t\t<Mission {...props} />\n\t\t\t\t\t</Section>\n\t\t\t\t</header>\n\t\t\t\t<main className=\"gap-12 grid grid-cols-1 lg:grid-cols-2\">\n\t\t\t\t\t<div className=\"gap-12 grid grid-cols-1\">\n\t\t\t\t\t\t<Section heading=\"Analytical & Creative Interests\" id=\"interests\">\n\t\t\t\t\t\t\t<InterestsHexGrid {...props} />\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t<div className=\"gap-4 grid grid-cols-1 sm:grid-cols-2\">\n\t\t\t\t\t\t\t<SkillRatingsChartList {...props} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Section heading=\"Experience\" id=\"experience\">\n\t\t\t\t\t\t\t<ExperienceTimeline {...props} />\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer></footer>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { useResumeModel } from '../hooks/use-resume-model';\nimport { ResumeModel } from '../resume/resume-model';\nimport { ResumeProvider } from '../resume/resume-provider';\nimport { createResumeProvider } from '../resume/resume-provider-factory';\nimport { Resume } from './Resume';\n\nexport function App() {\n\t// Determine which resume provider to use.\n\tconst searchParams: URLSearchParams = new URL(document.location.toString()).searchParams;\n\tconst provideResume: ResumeProvider = createResumeProvider(searchParams);\n\n\tconst resume: ResumeModel | undefined = useResumeModel(provideResume);\n\treturn resume ? <Resume resume={resume} /> : null;\n}\n","import { useEffect, useState } from 'react';\nimport { ResumeModel } from '../resume/resume-model';\nimport { ResumeProvider } from '../resume/resume-provider';\n\nexport function useResumeModel(provider: ResumeProvider): ResumeModel | undefined {\n\tconst [resume, setResume] = useState<ResumeModel>();\n\tuseEffect((): void => void provider().then(setResume), [provider]);\n\treturn resume;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}